"""
(./python -m omdev.magic find --modules -k '@omlish-lite' om*)

==

omdev.tagstrings
omdev.bracepy
omdev.packaging.requires
omdev.packaging.revisions
omdev.packaging.names
omdev.packaging.wheelfile
omdev.packaging.versions
omdev.packaging.specifiers
omdev.packaging.tests
omdev.dataserver
omdev.magic
omdev.ci
omdev.interp
omdev.tests.test_tagstrings
omdev.oci.datarefs
omdev.oci.tars
omdev.oci.media
omdev.oci.loading
omdev.oci.building
omdev.oci.compression
omdev.oci.repositories
omdev.oci.data
omdev.oci.tests.test_media
omdev.oci.pack.packing
omdev.oci.pack.repositories
omdev.oci.pack.unpacking
omdev.pyproject
omdev.cli.install
omdev.cexts.magic
omdev.scripts.bumpversion
omdev.scripts.pyproject
omdev.scripts.ci
omdev.scripts.interp
omdev.manifests
omdev.amalg.tests.demo.incl.foo
omdev.tokens.tokenizert
omdev.tokens.tests.test_tokenizert
omdev.git.shallow
omdev.git.revisions
omdev.git.status
ominfra.systemd
ominfra.threadworkers
ominfra.pyremote
ominfra.journald.tailer
ominfra.journald.messages
ominfra.tests.test_systemd
ominfra.tests.test_pyremote
ominfra.clouds.aws.auth
ominfra.clouds.aws.logs
ominfra.clouds.aws.dataclasses
ominfra.clouds.aws.journald2aws
ominfra.scripts.supervisor
ominfra.scripts.journald2aws
ominfra.scripts.manage
ominfra.manage
ominfra.supervisor
omlish.datetimes
omlish.shlex
omlish.subprocesses.sync
omlish.subprocesses.run
omlish.subprocesses.utils
omlish.subprocesses.async_
omlish.subprocesses.wrap
omlish.subprocesses.base
omlish.subprocesses.tests.test_subprocesses
omlish.diag.lsof
omlish.diag.ps
omlish.diag.lslocks
omlish.docker.consts
omlish.docker.portrelay
omlish.docker.detect
omlish.formats.dotenv
omlish.formats.toml.parser
omlish.formats.toml.writer
omlish.formats.toml.tests.test_parser
omlish.formats.ini.sections
omlish.formats.ini.tests.test_sections
omlish.sockets.io
omlish.sockets.handlers
omlish.sockets.bind
omlish.sockets.addresses
omlish.sockets.server.server
omlish.sockets.server.handlers
omlish.sockets.server.threading
omlish.lite
omlish.argparse.cli
omlish.argparse.tests.test_cli
omlish.secrets.ssl
omlish.secrets.tempssl
omlish.io.fileno
omlish.io.buffers
omlish.io.tests.test_buffers
omlish.io.fdio
omlish.tests.test_shlex
omlish.algorithm.distribute
omlish.algorithm.toposort
omlish.logs.proxy
omlish.logs.standard
omlish.logs.callers
omlish.logs.protocol
omlish.logs.handlers
omlish.logs.timing
omlish.logs.json
omlish.logs.filters
omlish.logs.tests.test_json
omlish.http.parsing
omlish.http.handlers
omlish.http.versions
omlish.http.coro.server
omlish.http.coro.sockets
omlish.http.coro.fdio
omlish.http.coro.simple
omlish.http.coro.tests.test_server
omlish.configs.types
omlish.configs.nginx
omlish.configs.formats
omlish.configs.shadow
omlish.configs.processing.rewriting
omlish.configs.processing.flattening
omlish.configs.processing.names
omlish.configs.processing.matching
omlish.configs.processing.merging
omlish.configs.processing.strings
omlish.configs.processing.inheritance
omlish.configs.processing.tests.test_names
omlish.configs.processing.tests.test_flattening
omlish.configs.processing.tests.test_inheritance
omlish.configs.tests.test_nginx
omlish.os.signals
omlish.os.files
omlish.os.atomics
omlish.os.paths
omlish.os.forkhooks
omlish.os.mangle
omlish.os.deathsig
omlish.os.temp
omlish.os.filemodes
omlish.os.journald
omlish.os.fcntl
omlish.os.linux
omlish.os.tests.test_paths
omlish.os.tests.test_mangle
omlish.os.tests.test_journald
omlish.os.pidfiles.pidfile
omlish.os.pidfiles.pinning
omlish.os.pidfiles.manager
omlish.text.glyphsplit
omlish.text.indent
omlish.text.minja
omlish.text.tests.test_minja
omlish.text.tests.test_glyphsplit
omlish.manifests.types
omlish.manifests.load
omlish.manifests.base
omlish.asyncs.bluelet.files
omlish.asyncs.bluelet.runner
omlish.asyncs.bluelet.events
omlish.asyncs.bluelet.core
omlish.asyncs.bluelet.api
omlish.asyncs.bluelet.sockets
omlish.asyncs.bluelet.tests.test_bluelet
omlish.asyncs.ioproxy
omlish.asyncs.asyncio.streams
omlish.asyncs.asyncio.subprocesses
omlish.asyncs.asyncio.asyncio
omlish.asyncs.asyncio.timeouts
omlish.asyncs.asyncio.channels
"""
import unittest


def _main() -> None:
    prog = unittest.TestProgram(
        module=None,
        argv=[
            'python -m unittest',
            'discover',
            '-vb',
            'omlish.lite',
        ],
    )


if __name__ == '__main__':
    _main()
