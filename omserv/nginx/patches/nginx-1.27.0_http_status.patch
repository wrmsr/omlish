diff --git a/src/event/ngx_event.c b/src/event/ngx_event.c
index ef525d9..46ca5ee 100644
--- a/src/event/ngx_event.c
+++ b/src/event/ngx_event.c
@@ -75,6 +75,13 @@ ngx_atomic_t         *ngx_stat_writing = &ngx_stat_writing0;
 static ngx_atomic_t   ngx_stat_waiting0;
 ngx_atomic_t         *ngx_stat_waiting = &ngx_stat_waiting0;
 
+static ngx_atomic_t   ngx_stat_2xx0;
+ngx_atomic_t         *ngx_stat_2xx = &ngx_stat_2xx0;
+static ngx_atomic_t   ngx_stat_4xx0;
+ngx_atomic_t         *ngx_stat_4xx = &ngx_stat_4xx0;
+static ngx_atomic_t   ngx_stat_5xx0;
+ngx_atomic_t         *ngx_stat_5xx = &ngx_stat_5xx0;
+
 #endif
 
 
@@ -563,7 +570,10 @@ ngx_event_module_init(ngx_cycle_t *cycle)
            + cl          /* ngx_stat_active */
            + cl          /* ngx_stat_reading */
            + cl          /* ngx_stat_writing */
-           + cl;         /* ngx_stat_waiting */
+           + cl          /* ngx_stat_waiting */
+           + cl          /* ngx_stat_2xx */
+           + cl          /* ngx_stat_4xx */
+           + cl;         /* ngx_stat_5xx */
 
 #endif
 
@@ -610,6 +620,9 @@ ngx_event_module_init(ngx_cycle_t *cycle)
     ngx_stat_reading = (ngx_atomic_t *) (shared + 7 * cl);
     ngx_stat_writing = (ngx_atomic_t *) (shared + 8 * cl);
     ngx_stat_waiting = (ngx_atomic_t *) (shared + 9 * cl);
+    ngx_stat_2xx = (ngx_atomic_t *) (shared + 10 * cl);
+    ngx_stat_4xx = (ngx_atomic_t *) (shared + 11 * cl);
+    ngx_stat_5xx = (ngx_atomic_t *) (shared + 12 * cl);
 
 #endif
 
diff --git a/src/event/ngx_event.h b/src/event/ngx_event.h
index deac04e..48b7622 100644
--- a/src/event/ngx_event.h
+++ b/src/event/ngx_event.h
@@ -475,6 +475,10 @@ extern ngx_atomic_t  *ngx_stat_reading;
 extern ngx_atomic_t  *ngx_stat_writing;
 extern ngx_atomic_t  *ngx_stat_waiting;
 
+extern ngx_atomic_t  *ngx_stat_2xx;
+extern ngx_atomic_t  *ngx_stat_4xx;
+extern ngx_atomic_t  *ngx_stat_5xx;
+
 #endif
 
 
diff --git a/src/http/modules/ngx_http_stub_status_module.c b/src/http/modules/ngx_http_stub_status_module.c
index db68b76..631427d 100644
--- a/src/http/modules/ngx_http_stub_status_module.c
+++ b/src/http/modules/ngx_http_stub_status_module.c
@@ -87,7 +87,7 @@ ngx_http_stub_status_handler(ngx_http_request_t *r)
     ngx_int_t          rc;
     ngx_buf_t         *b;
     ngx_chain_t        out;
-    ngx_atomic_int_t   ap, hn, ac, rq, rd, wr, wa;
+    ngx_atomic_int_t   ap, hn, ac, rq, rd, wr, wa, st2xx, st4xx, st5xx;
 
     if (!(r->method & (NGX_HTTP_GET|NGX_HTTP_HEAD))) {
         return NGX_HTTP_NOT_ALLOWED;
@@ -124,12 +124,16 @@ ngx_http_stub_status_handler(ngx_http_request_t *r)
     wr = *ngx_stat_writing;
     wa = *ngx_stat_waiting;
 
+    st2xx = *ngx_stat_2xx;
+    st4xx = *ngx_stat_4xx;
+    st5xx = *ngx_stat_5xx;
+
     b->last = ngx_sprintf(b->last, "Active connections: %uA \n", ac);
 
-    b->last = ngx_cpymem(b->last, "server accepts handled requests\n",
-                         sizeof("server accepts handled requests\n") - 1);
+    b->last = ngx_cpymem(b->last, "server accepts handled requests 2xx 4xx 5xx\n",
+                         sizeof("server accepts handled requests 2xx 4xx 5xx\n") - 1);
 
-    b->last = ngx_sprintf(b->last, " %uA %uA %uA \n", ap, hn, rq);
+    b->last = ngx_sprintf(b->last, " %uA %uA %uA %uA %uA %uA \n", ap, hn, rq, st2xx, st4xx, st5xx);
 
     b->last = ngx_sprintf(b->last, "Reading: %uA Writing: %uA Waiting: %uA \n",
                           rd, wr, wa);
diff --git a/src/http/ngx_http_request.c b/src/http/ngx_http_request.c
index 3cca57c..46ff1fe 100644
--- a/src/http/ngx_http_request.c
+++ b/src/http/ngx_http_request.c
@@ -3797,6 +3797,16 @@ ngx_http_log_request(ngx_http_request_t *r)
     ngx_http_handler_pt        *log_handler;
     ngx_http_core_main_conf_t  *cmcf;
 
+#if (NGX_STAT_STUB)
+    if (r->headers_out.status >= 200 && r->headers_out.status < 300) {
+        (void) ngx_atomic_fetch_add(ngx_stat_2xx, 1);
+    } else if (r->headers_out.status >= 400 && r->headers_out.status < 500) {
+        (void) ngx_atomic_fetch_add(ngx_stat_4xx, 1);
+    } else if (r->headers_out.status >= 500 && r->headers_out.status < 600) {
+        (void) ngx_atomic_fetch_add(ngx_stat_5xx, 1);
+    }
+#endif
+
     cmcf = ngx_http_get_module_main_conf(r, ngx_http_core_module);
 
     log_handler = cmcf->phases[NGX_HTTP_LOG_PHASE].handlers.elts;
