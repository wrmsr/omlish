# type: ignore
# ruff: noqa
# flake8: noqa
# Generated from Protobuf3.g4 by ANTLR 4.13.2
from omlish.antlr._runtime._all import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,59,578,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,
        7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,
        14,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,
        17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,
        19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,
        21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,
        22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,
        24,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,27,1,27,1,
        27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,
        29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,
        30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,
        32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,
        34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,
        35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,
        37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,
        39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,
        40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,
        42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,
        44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,
        46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,
        48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,51,1,51,1,
        52,1,52,1,53,1,53,1,54,1,54,1,54,5,54,429,8,54,10,54,12,54,432,9,
        54,1,55,1,55,1,55,3,55,437,8,55,1,56,1,56,5,56,441,8,56,10,56,12,
        56,444,9,56,1,57,1,57,5,57,448,8,57,10,57,12,57,451,9,57,1,58,1,
        58,1,58,4,58,456,8,58,11,58,12,58,457,1,59,1,59,1,59,3,59,463,8,
        59,1,59,3,59,466,8,59,1,59,1,59,1,59,1,59,1,59,1,59,3,59,474,8,59,
        3,59,476,8,59,1,59,1,59,1,59,1,59,1,59,1,59,3,59,484,8,59,1,60,4,
        60,487,8,60,11,60,12,60,488,1,61,1,61,3,61,493,8,61,1,61,1,61,1,
        62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,3,62,506,8,62,1,63,1,
        63,5,63,510,8,63,10,63,12,63,513,9,63,1,63,1,63,1,63,5,63,518,8,
        63,10,63,12,63,521,9,63,1,63,3,63,524,8,63,1,64,1,64,1,64,1,64,3,
        64,530,8,64,1,65,1,65,1,65,1,65,1,65,1,66,1,66,1,66,1,66,1,66,1,
        67,1,67,1,67,1,68,1,68,1,69,4,69,548,8,69,11,69,12,69,549,1,69,1,
        69,1,70,1,70,1,70,1,70,5,70,558,8,70,10,70,12,70,561,9,70,1,70,1,
        70,1,70,1,70,1,70,1,71,1,71,1,71,1,71,5,71,572,8,71,10,71,12,71,
        575,9,71,1,71,1,71,1,559,0,72,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
        17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,
        39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,
        61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,
        83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,0,103,
        0,105,0,107,0,109,51,111,52,113,0,115,0,117,0,119,53,121,0,123,0,
        125,54,127,55,129,0,131,0,133,0,135,0,137,56,139,57,141,58,143,59,
        1,0,13,3,0,65,90,95,95,97,122,1,0,48,57,1,0,48,55,3,0,48,57,65,70,
        97,102,1,0,49,57,2,0,88,88,120,120,2,0,69,69,101,101,2,0,43,43,45,
        45,3,0,0,0,10,10,92,92,9,0,34,34,39,39,92,92,97,98,102,102,110,110,
        114,114,116,116,118,118,2,0,34,34,39,39,3,0,9,10,12,13,32,32,2,0,
        10,10,13,13,590,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,
        0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,
        0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,
        0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,
        0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,
        0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,
        0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,
        0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,
        0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,
        0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,
        0,99,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,119,1,0,0,0,0,125,1,0,
        0,0,0,127,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,
        1,0,0,0,1,145,1,0,0,0,3,147,1,0,0,0,5,149,1,0,0,0,7,151,1,0,0,0,
        9,153,1,0,0,0,11,155,1,0,0,0,13,157,1,0,0,0,15,159,1,0,0,0,17,161,
        1,0,0,0,19,163,1,0,0,0,21,165,1,0,0,0,23,167,1,0,0,0,25,169,1,0,
        0,0,27,171,1,0,0,0,29,173,1,0,0,0,31,175,1,0,0,0,33,180,1,0,0,0,
        35,186,1,0,0,0,37,193,1,0,0,0,39,198,1,0,0,0,41,205,1,0,0,0,43,213,
        1,0,0,0,45,221,1,0,0,0,47,227,1,0,0,0,49,234,1,0,0,0,51,240,1,0,
        0,0,53,246,1,0,0,0,55,250,1,0,0,0,57,258,1,0,0,0,59,264,1,0,0,0,
        61,271,1,0,0,0,63,279,1,0,0,0,65,288,1,0,0,0,67,297,1,0,0,0,69,304,
        1,0,0,0,71,313,1,0,0,0,73,322,1,0,0,0,75,330,1,0,0,0,77,334,1,0,
        0,0,79,342,1,0,0,0,81,351,1,0,0,0,83,360,1,0,0,0,85,367,1,0,0,0,
        87,374,1,0,0,0,89,381,1,0,0,0,91,388,1,0,0,0,93,395,1,0,0,0,95,398,
        1,0,0,0,97,405,1,0,0,0,99,412,1,0,0,0,101,417,1,0,0,0,103,419,1,
        0,0,0,105,421,1,0,0,0,107,423,1,0,0,0,109,425,1,0,0,0,111,436,1,
        0,0,0,113,438,1,0,0,0,115,445,1,0,0,0,117,452,1,0,0,0,119,483,1,
        0,0,0,121,486,1,0,0,0,123,490,1,0,0,0,125,505,1,0,0,0,127,523,1,
        0,0,0,129,529,1,0,0,0,131,531,1,0,0,0,133,536,1,0,0,0,135,541,1,
        0,0,0,137,544,1,0,0,0,139,547,1,0,0,0,141,553,1,0,0,0,143,567,1,
        0,0,0,145,146,5,61,0,0,146,2,1,0,0,0,147,148,5,59,0,0,148,4,1,0,
        0,0,149,150,5,40,0,0,150,6,1,0,0,0,151,152,5,41,0,0,152,8,1,0,0,
        0,153,154,5,46,0,0,154,10,1,0,0,0,155,156,5,123,0,0,156,12,1,0,0,
        0,157,158,5,125,0,0,158,14,1,0,0,0,159,160,5,58,0,0,160,16,1,0,0,
        0,161,162,5,45,0,0,162,18,1,0,0,0,163,164,5,91,0,0,164,20,1,0,0,
        0,165,166,5,44,0,0,166,22,1,0,0,0,167,168,5,93,0,0,168,24,1,0,0,
        0,169,170,5,60,0,0,170,26,1,0,0,0,171,172,5,62,0,0,172,28,1,0,0,
        0,173,174,5,43,0,0,174,30,1,0,0,0,175,176,5,98,0,0,176,177,5,111,
        0,0,177,178,5,111,0,0,178,179,5,108,0,0,179,32,1,0,0,0,180,181,5,
        98,0,0,181,182,5,121,0,0,182,183,5,116,0,0,183,184,5,101,0,0,184,
        185,5,115,0,0,185,34,1,0,0,0,186,187,5,100,0,0,187,188,5,111,0,0,
        188,189,5,117,0,0,189,190,5,98,0,0,190,191,5,108,0,0,191,192,5,101,
        0,0,192,36,1,0,0,0,193,194,5,101,0,0,194,195,5,110,0,0,195,196,5,
        117,0,0,196,197,5,109,0,0,197,38,1,0,0,0,198,199,5,101,0,0,199,200,
        5,120,0,0,200,201,5,116,0,0,201,202,5,101,0,0,202,203,5,110,0,0,
        203,204,5,100,0,0,204,40,1,0,0,0,205,206,5,102,0,0,206,207,5,105,
        0,0,207,208,5,120,0,0,208,209,5,101,0,0,209,210,5,100,0,0,210,211,
        5,51,0,0,211,212,5,50,0,0,212,42,1,0,0,0,213,214,5,102,0,0,214,215,
        5,105,0,0,215,216,5,120,0,0,216,217,5,101,0,0,217,218,5,100,0,0,
        218,219,5,54,0,0,219,220,5,52,0,0,220,44,1,0,0,0,221,222,5,102,0,
        0,222,223,5,108,0,0,223,224,5,111,0,0,224,225,5,97,0,0,225,226,5,
        116,0,0,226,46,1,0,0,0,227,228,5,105,0,0,228,229,5,109,0,0,229,230,
        5,112,0,0,230,231,5,111,0,0,231,232,5,114,0,0,232,233,5,116,0,0,
        233,48,1,0,0,0,234,235,5,105,0,0,235,236,5,110,0,0,236,237,5,116,
        0,0,237,238,5,51,0,0,238,239,5,50,0,0,239,50,1,0,0,0,240,241,5,105,
        0,0,241,242,5,110,0,0,242,243,5,116,0,0,243,244,5,54,0,0,244,245,
        5,52,0,0,245,52,1,0,0,0,246,247,5,109,0,0,247,248,5,97,0,0,248,249,
        5,112,0,0,249,54,1,0,0,0,250,251,5,109,0,0,251,252,5,101,0,0,252,
        253,5,115,0,0,253,254,5,115,0,0,254,255,5,97,0,0,255,256,5,103,0,
        0,256,257,5,101,0,0,257,56,1,0,0,0,258,259,5,111,0,0,259,260,5,110,
        0,0,260,261,5,101,0,0,261,262,5,111,0,0,262,263,5,102,0,0,263,58,
        1,0,0,0,264,265,5,111,0,0,265,266,5,112,0,0,266,267,5,116,0,0,267,
        268,5,105,0,0,268,269,5,111,0,0,269,270,5,110,0,0,270,60,1,0,0,0,
        271,272,5,112,0,0,272,273,5,97,0,0,273,274,5,99,0,0,274,275,5,107,
        0,0,275,276,5,97,0,0,276,277,5,103,0,0,277,278,5,101,0,0,278,62,
        1,0,0,0,279,280,5,34,0,0,280,281,5,112,0,0,281,282,5,114,0,0,282,
        283,5,111,0,0,283,284,5,116,0,0,284,285,5,111,0,0,285,286,5,51,0,
        0,286,287,5,34,0,0,287,64,1,0,0,0,288,289,5,39,0,0,289,290,5,112,
        0,0,290,291,5,114,0,0,291,292,5,111,0,0,292,293,5,116,0,0,293,294,
        5,111,0,0,294,295,5,51,0,0,295,296,5,39,0,0,296,66,1,0,0,0,297,298,
        5,112,0,0,298,299,5,117,0,0,299,300,5,98,0,0,300,301,5,108,0,0,301,
        302,5,105,0,0,302,303,5,99,0,0,303,68,1,0,0,0,304,305,5,114,0,0,
        305,306,5,101,0,0,306,307,5,112,0,0,307,308,5,101,0,0,308,309,5,
        97,0,0,309,310,5,116,0,0,310,311,5,101,0,0,311,312,5,100,0,0,312,
        70,1,0,0,0,313,314,5,114,0,0,314,315,5,101,0,0,315,316,5,115,0,0,
        316,317,5,101,0,0,317,318,5,114,0,0,318,319,5,118,0,0,319,320,5,
        101,0,0,320,321,5,100,0,0,321,72,1,0,0,0,322,323,5,114,0,0,323,324,
        5,101,0,0,324,325,5,116,0,0,325,326,5,117,0,0,326,327,5,114,0,0,
        327,328,5,110,0,0,328,329,5,115,0,0,329,74,1,0,0,0,330,331,5,114,
        0,0,331,332,5,112,0,0,332,333,5,99,0,0,333,76,1,0,0,0,334,335,5,
        115,0,0,335,336,5,101,0,0,336,337,5,114,0,0,337,338,5,118,0,0,338,
        339,5,105,0,0,339,340,5,99,0,0,340,341,5,101,0,0,341,78,1,0,0,0,
        342,343,5,115,0,0,343,344,5,102,0,0,344,345,5,105,0,0,345,346,5,
        120,0,0,346,347,5,101,0,0,347,348,5,100,0,0,348,349,5,51,0,0,349,
        350,5,50,0,0,350,80,1,0,0,0,351,352,5,115,0,0,352,353,5,102,0,0,
        353,354,5,105,0,0,354,355,5,120,0,0,355,356,5,101,0,0,356,357,5,
        100,0,0,357,358,5,54,0,0,358,359,5,52,0,0,359,82,1,0,0,0,360,361,
        5,115,0,0,361,362,5,105,0,0,362,363,5,110,0,0,363,364,5,116,0,0,
        364,365,5,51,0,0,365,366,5,50,0,0,366,84,1,0,0,0,367,368,5,115,0,
        0,368,369,5,105,0,0,369,370,5,110,0,0,370,371,5,116,0,0,371,372,
        5,54,0,0,372,373,5,52,0,0,373,86,1,0,0,0,374,375,5,115,0,0,375,376,
        5,116,0,0,376,377,5,114,0,0,377,378,5,101,0,0,378,379,5,97,0,0,379,
        380,5,109,0,0,380,88,1,0,0,0,381,382,5,115,0,0,382,383,5,116,0,0,
        383,384,5,114,0,0,384,385,5,105,0,0,385,386,5,110,0,0,386,387,5,
        103,0,0,387,90,1,0,0,0,388,389,5,115,0,0,389,390,5,121,0,0,390,391,
        5,110,0,0,391,392,5,116,0,0,392,393,5,97,0,0,393,394,5,120,0,0,394,
        92,1,0,0,0,395,396,5,116,0,0,396,397,5,111,0,0,397,94,1,0,0,0,398,
        399,5,117,0,0,399,400,5,105,0,0,400,401,5,110,0,0,401,402,5,116,
        0,0,402,403,5,51,0,0,403,404,5,50,0,0,404,96,1,0,0,0,405,406,5,117,
        0,0,406,407,5,105,0,0,407,408,5,110,0,0,408,409,5,116,0,0,409,410,
        5,54,0,0,410,411,5,52,0,0,411,98,1,0,0,0,412,413,5,119,0,0,413,414,
        5,101,0,0,414,415,5,97,0,0,415,416,5,107,0,0,416,100,1,0,0,0,417,
        418,7,0,0,0,418,102,1,0,0,0,419,420,7,1,0,0,420,104,1,0,0,0,421,
        422,7,2,0,0,422,106,1,0,0,0,423,424,7,3,0,0,424,108,1,0,0,0,425,
        430,3,101,50,0,426,429,3,101,50,0,427,429,3,103,51,0,428,426,1,0,
        0,0,428,427,1,0,0,0,429,432,1,0,0,0,430,428,1,0,0,0,430,431,1,0,
        0,0,431,110,1,0,0,0,432,430,1,0,0,0,433,437,3,113,56,0,434,437,3,
        115,57,0,435,437,3,117,58,0,436,433,1,0,0,0,436,434,1,0,0,0,436,
        435,1,0,0,0,437,112,1,0,0,0,438,442,7,4,0,0,439,441,3,103,51,0,440,
        439,1,0,0,0,441,444,1,0,0,0,442,440,1,0,0,0,442,443,1,0,0,0,443,
        114,1,0,0,0,444,442,1,0,0,0,445,449,5,48,0,0,446,448,3,105,52,0,
        447,446,1,0,0,0,448,451,1,0,0,0,449,447,1,0,0,0,449,450,1,0,0,0,
        450,116,1,0,0,0,451,449,1,0,0,0,452,453,5,48,0,0,453,455,7,5,0,0,
        454,456,3,107,53,0,455,454,1,0,0,0,456,457,1,0,0,0,457,455,1,0,0,
        0,457,458,1,0,0,0,458,118,1,0,0,0,459,460,3,121,60,0,460,462,5,46,
        0,0,461,463,3,121,60,0,462,461,1,0,0,0,462,463,1,0,0,0,463,465,1,
        0,0,0,464,466,3,123,61,0,465,464,1,0,0,0,465,466,1,0,0,0,466,476,
        1,0,0,0,467,468,3,121,60,0,468,469,3,123,61,0,469,476,1,0,0,0,470,
        471,5,46,0,0,471,473,3,121,60,0,472,474,3,123,61,0,473,472,1,0,0,
        0,473,474,1,0,0,0,474,476,1,0,0,0,475,459,1,0,0,0,475,467,1,0,0,
        0,475,470,1,0,0,0,476,484,1,0,0,0,477,478,5,105,0,0,478,479,5,110,
        0,0,479,484,5,102,0,0,480,481,5,110,0,0,481,482,5,97,0,0,482,484,
        5,110,0,0,483,475,1,0,0,0,483,477,1,0,0,0,483,480,1,0,0,0,484,120,
        1,0,0,0,485,487,3,103,51,0,486,485,1,0,0,0,487,488,1,0,0,0,488,486,
        1,0,0,0,488,489,1,0,0,0,489,122,1,0,0,0,490,492,7,6,0,0,491,493,
        7,7,0,0,492,491,1,0,0,0,492,493,1,0,0,0,493,494,1,0,0,0,494,495,
        3,121,60,0,495,124,1,0,0,0,496,497,5,116,0,0,497,498,5,114,0,0,498,
        499,5,117,0,0,499,506,5,101,0,0,500,501,5,102,0,0,501,502,5,97,0,
        0,502,503,5,108,0,0,503,504,5,115,0,0,504,506,5,101,0,0,505,496,
        1,0,0,0,505,500,1,0,0,0,506,126,1,0,0,0,507,511,5,39,0,0,508,510,
        3,129,64,0,509,508,1,0,0,0,510,513,1,0,0,0,511,509,1,0,0,0,511,512,
        1,0,0,0,512,514,1,0,0,0,513,511,1,0,0,0,514,524,5,39,0,0,515,519,
        5,34,0,0,516,518,3,129,64,0,517,516,1,0,0,0,518,521,1,0,0,0,519,
        517,1,0,0,0,519,520,1,0,0,0,520,522,1,0,0,0,521,519,1,0,0,0,522,
        524,5,34,0,0,523,507,1,0,0,0,523,515,1,0,0,0,524,128,1,0,0,0,525,
        530,3,131,65,0,526,530,3,133,66,0,527,530,3,135,67,0,528,530,8,8,
        0,0,529,525,1,0,0,0,529,526,1,0,0,0,529,527,1,0,0,0,529,528,1,0,
        0,0,530,130,1,0,0,0,531,532,5,92,0,0,532,533,7,5,0,0,533,534,3,107,
        53,0,534,535,3,107,53,0,535,132,1,0,0,0,536,537,5,92,0,0,537,538,
        3,105,52,0,538,539,3,105,52,0,539,540,3,105,52,0,540,134,1,0,0,0,
        541,542,5,92,0,0,542,543,7,9,0,0,543,136,1,0,0,0,544,545,7,10,0,
        0,545,138,1,0,0,0,546,548,7,11,0,0,547,546,1,0,0,0,548,549,1,0,0,
        0,549,547,1,0,0,0,549,550,1,0,0,0,550,551,1,0,0,0,551,552,6,69,0,
        0,552,140,1,0,0,0,553,554,5,47,0,0,554,555,5,42,0,0,555,559,1,0,
        0,0,556,558,9,0,0,0,557,556,1,0,0,0,558,561,1,0,0,0,559,560,1,0,
        0,0,559,557,1,0,0,0,560,562,1,0,0,0,561,559,1,0,0,0,562,563,5,42,
        0,0,563,564,5,47,0,0,564,565,1,0,0,0,565,566,6,70,0,0,566,142,1,
        0,0,0,567,568,5,47,0,0,568,569,5,47,0,0,569,573,1,0,0,0,570,572,
        8,12,0,0,571,570,1,0,0,0,572,575,1,0,0,0,573,571,1,0,0,0,573,574,
        1,0,0,0,574,576,1,0,0,0,575,573,1,0,0,0,576,577,6,71,0,0,577,144,
        1,0,0,0,22,0,428,430,436,442,449,457,462,465,473,475,483,488,492,
        505,511,519,523,529,549,559,573,1,0,2,0
    ]

class Protobuf3Lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    BOOL = 16
    BYTES = 17
    DOUBLE = 18
    ENUM = 19
    EXTEND = 20
    FIXED32 = 21
    FIXED64 = 22
    FLOAT = 23
    IMPORT = 24
    INT32 = 25
    INT64 = 26
    MAP = 27
    MESSAGE = 28
    ONEOF = 29
    OPTION = 30
    PACKAGE = 31
    PROTO3_DOUBLE = 32
    PROTO3_SINGLE = 33
    PUBLIC = 34
    REPEATED = 35
    RESERVED = 36
    RETURNS = 37
    RPC = 38
    SERVICE = 39
    SFIXED32 = 40
    SFIXED64 = 41
    SINT32 = 42
    SINT64 = 43
    STREAM = 44
    STRING = 45
    SYNTAX = 46
    TO = 47
    UINT32 = 48
    UINT64 = 49
    WEAK = 50
    IDENT = 51
    INT_LIT = 52
    FLOAT_LIT = 53
    BOOL_LIT = 54
    STR_LIT = 55
    QUOTE = 56
    WS = 57
    COMMENT = 58
    LINE_COMMENT = 59

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'='", "';'", "'('", "')'", "'.'", "'{'", "'}'", "':'", "'-'", 
            "'['", "','", "']'", "'<'", "'>'", "'+'", "'bool'", "'bytes'", 
            "'double'", "'enum'", "'extend'", "'fixed32'", "'fixed64'", 
            "'float'", "'import'", "'int32'", "'int64'", "'map'", "'message'", 
            "'oneof'", "'option'", "'package'", "'\"proto3\"'", "''proto3''", 
            "'public'", "'repeated'", "'reserved'", "'returns'", "'rpc'", 
            "'service'", "'sfixed32'", "'sfixed64'", "'sint32'", "'sint64'", 
            "'stream'", "'string'", "'syntax'", "'to'", "'uint32'", "'uint64'", 
            "'weak'" ]

    symbolicNames = [ "<INVALID>",
            "BOOL", "BYTES", "DOUBLE", "ENUM", "EXTEND", "FIXED32", "FIXED64", 
            "FLOAT", "IMPORT", "INT32", "INT64", "MAP", "MESSAGE", "ONEOF", 
            "OPTION", "PACKAGE", "PROTO3_DOUBLE", "PROTO3_SINGLE", "PUBLIC", 
            "REPEATED", "RESERVED", "RETURNS", "RPC", "SERVICE", "SFIXED32", 
            "SFIXED64", "SINT32", "SINT64", "STREAM", "STRING", "SYNTAX", 
            "TO", "UINT32", "UINT64", "WEAK", "IDENT", "INT_LIT", "FLOAT_LIT", 
            "BOOL_LIT", "STR_LIT", "QUOTE", "WS", "COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "BOOL", "BYTES", "DOUBLE", "ENUM", "EXTEND", 
                  "FIXED32", "FIXED64", "FLOAT", "IMPORT", "INT32", "INT64", 
                  "MAP", "MESSAGE", "ONEOF", "OPTION", "PACKAGE", "PROTO3_DOUBLE", 
                  "PROTO3_SINGLE", "PUBLIC", "REPEATED", "RESERVED", "RETURNS", 
                  "RPC", "SERVICE", "SFIXED32", "SFIXED64", "SINT32", "SINT64", 
                  "STREAM", "STRING", "SYNTAX", "TO", "UINT32", "UINT64", 
                  "WEAK", "LETTER", "DECIMAL_DIGIT", "OCTAL_DIGIT", "HEX_DIGIT", 
                  "IDENT", "INT_LIT", "DECIMAL_LIT", "OCTAL_LIT", "HEX_LIT", 
                  "FLOAT_LIT", "DECIMALS", "EXPONENT", "BOOL_LIT", "STR_LIT", 
                  "CHAR_VALUE", "HEX_ESCAPE", "OCT_ESCAPE", "CHAR_ESCAPE", 
                  "QUOTE", "WS", "COMMENT", "LINE_COMMENT" ]

    grammarFileName = "Protobuf3.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


