# TODO:
# - https://docs.docker.com/build/cache/backends/inline/
# - https://stackoverflow.com/a/73750495

name: Ci

permissions:
  contents: read
  checks: write

on:
  push:
    branches:
      - 'master'

env:
  IMAGE_NAME: 'omlish-ci'

jobs:
  test:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v4.1.7'

      - uses: 'styfle/cancel-workflow-action@0.12.1'
        with:
          access_token: '${{ github.token }}'

      ##

      - name: 'Cache'
        uses: 'actions/cache@v2'
        id: 'cache'
        with:
          path: '~/.cache'
          key:
            ci-${{ github.ref }}-${{ hashFiles(
              'docker/.timestamp',
              'docker/ci/Dockerfile',
              'docker/compose.yml',
            ) }}
          restore-keys: |
            ci-${{ github.ref }}-
            ci-

      - name: 'Docker cache load'
        run: >
          tar -tvf ~/.cache/docker/ci.tar ||: ;
          docker load -i ~/.cache/docker/ci.tar ||: ;
          docker image history wrmsr/omlish-ci ||: ;

      ##

      # - uses: 'mxschmitt/action-tmate@v3.18'

      - name: 'Build CI image'
        run: >
          make ci-image

      - name: 'Run CI tests'
        run: >
          CI_DOCKER_OPTS='-v ${{ github.workspace }}:/github/workspace -e PYTEST_JUNIT_XML_PATH'
          PYTEST_JUNIT_XML_PATH=/github/workspace/test-results.xml
          make ci

      - uses: 'mikepenz/action-junit-report@v4.3.1'
        if: 'always()'
        with:
          report_paths: ${{ github.workspace }}/test-results.xml

      ##

      - name: 'Docker cache save'
        if: "steps.cache.outputs.cache-hit != 'true'"
        run: >
          mkdir -p ~/.cache/docker/ &&
          docker image history wrmsr/omlish-ci &&
          (
            for IMG in $(
              egrep '^\s*image:' docker/compose.yml | cut -d"'" -f2 | egrep -v 'wrmsr/omlish-ci'
            ) ; do
              if ( docker history "$IMG" >/dev/null 2>/dev/null ) ; then
                echo "$IMG" ;
                docker history "$IMG" | tail -n+2 | awk '{print $1}' | egrep -v '<missing>' ;
              fi ;
            done
          ) | xargs docker save -o ~/.cache/docker/ci.tar
